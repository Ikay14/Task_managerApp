const Task = require('../models/Task');


const getAllTasks = async (req, res)=>{
    try {
        const tasks = await Task.find({})
        // res.status(200).json({ tasks, amount:tasks.length })
        // res.status(200).json({ status: 'success', data: { tasks, nbHits: tasks.length} })
        res
        .status(200)
        .json({ tasks })
    } catch (error) {
        res.status(500).json({msg: error})
    }
}

const createTask  = async (req, res)=> {
    try {
        const task = await Task.create(req.body)
        res.status(201).json({ task })
       
    } catch (error) {
        res.status(500).json({msg: error})
    }  
}

const getTask = async (req, res)=> {
    try{
        const taskId = req.params.id;
        const task = await Task.findOne({_id: taskId})
       
      if(!task) {
        return res.status(404).json({msg: `No task with id ${taskId}`})
      }
        res.status(200).json(task)
    }catch (error) {
        res.status(500).json({msg: error})
    }
}

const deleteTask = async (req, res)=> {
    try {
        const taskId = req.params.id;
        const task = await Task.findByIdAndDelete({_id: taskId})
        
        if(!task){
            return res.status(404).json({msg: `No task with id ${taskId}`})
        }
        res.status(200).json({ task })
        //  res.status(200).send()
        // res.status(200).json({ task:null, status: 'success'})
    } catch (error) {
        res.status(500).json({msg: error})
    }
    
}

const updateTask = async (req, res)=> {
    try {
        const taskId = req.params.id

        const task = await Task.findByIdAndUpdate({_id: taskId}, req.body, {new:true, runValidators:true})
        if(!task){
            return res.status(404).json({msg: `No task with id ${taskId}`})
        }
        res.status(200).json({ task })
        
    } catch (error) {
        res.status(500).json({msg: error})
    }
}



module.exports = {
    getAllTasks,
    createTask,
    getTask,
    updateTask,
    deleteTask,
    
}

// app.get('/api/v1/tasks', (req, res)=> {})
// app.post('/api/v1/tasks', (req, res)=> {})
// app.get('/api/v1/tasks/:id', (req, res)=> {})
// app.patch('/api/v1/tasks/:id', (req, res)=> {})
// app.delete('/api/v1/tasks/:id', (req, res)=> {})


